on:
  push:
    branches: [ main, development ]
  pull_request:
  workflow_dispatch:

name: Quick tests based on default installation

jobs:
  stable_installation:
    name: Test stable pip installation on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          miniconda-version: latest
      - name: Conda info
        shell: bash -le {0}
        run: conda info
      - name: Pytest tests
        shell: bash -le {0}
        run: |
          pip install pytest
          pytest tests/pytest
      - name: Test pip installation with all stable dependencies
        shell: bash -le {0}
        run: |
          cd misc
          . ./pip_install.sh stable,tests
      - name: Run pipeline
        shell: bash -le {0}
        run: |
          cd tests
          . ./run_quicktests.sh
  loose_installation:
    name: Test loose pip installation on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          miniconda-version: latest
      - name: Conda info
        shell: bash -le {0}
        run: conda info
      - name: Pytest tests
        shell: bash -le {0}
        run: |
          pip install pytest
          pytest tests/pytest
      - name: Test pip installation with all loose dependencies
        shell: bash -le {0}
        run: |
          cd misc
          . ./pip_install.sh loose,tests
      - name: Run pipeline
        shell: bash -le {0}
        run: |
          cd tests
          . ./run_quicktests.sh
